# ==============================================================================
# Defaults
# ==============================================================================
# Make vim the default editor
if subl -v > /dev/null 2>&1; then
	export GEMEDITOR="subl"
	export EDITOR="subl"
else
	export GEMEDITOR="vim"
	export EDITOR="vim"
fi

# set PATH so it includes user's private bin if it exists
if [ -d ~/.local/bin/ ]; then
	PATH="$HOME/.local/bin/:$PATH"
fi

# Setup default BROWSER
if google-chrome-stable --version > /dev/null 2>&1; then
	export BROWSER="google-chrome-stable"
elif chromium-browser --version > /dev/null 2>&1; then
	export BROWSER="chromium-browser"
fi

# Don’t clear the screen after quitting a manual page
export MANPAGER="less -X"

# Larger bash history (allow 32³ entries; default is 500)
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
export HISTSIZE=2048
export HISTFILESIZE=61440

# timestamps for bash history. www.debian-administration.org/users/rossen/weblog/1
# saved for later analysis
export HISTTIMEFORMAT='%F %T → '

# Make some commands not show up in history
export HISTIGNORE="&:h:history:pwd:exit:clear:[ \t]*"

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
export HISTCONTROL=ignoreboth

# Limit path length in promt (e.g. ~/.../current/path/name)
export PROMPT_DIRTRIM=3

[[ -z $SSL_CERT_DIR && -d /etc/ssl/certs ]] && export SSL_CERT_DIR=/etc/ssl/certs

# export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

# Awesome bash prompt
#
# Copyright (c) 2012 "Cowboy" Ben Alman
# Licensed under the MIT license.
# http://benalman.com/about/license/
#
# Example:
# [master:!?][cowboy@CowBook:~/.dotfiles]
# [11:14:45] $
#
# Read more (and see a screenshot) in the "Prompt" section of
# https://github.com/cowboy/dotfiles

if infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
elif [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
fi

# ANSI CODES - SEPARATE MULTIPLE VALUES WITH ;
#
#  0  reset          4  underline
#  1  bold           7  inverse
#
# FG  BG  COLOR     FG  BG  COLOR
# 30  40  black     34  44  blue
# 31  41  red       35  45  magenta
# 32  42  green     36  46  cyan
# 33  43  yellow    37  47  white

if tput setaf 1 &> /dev/null; then
	tput sgr0
	black=$(tput setaf 0)
	red=$(tput setaf 1)
	green=$(tput setaf 2)
	yellow=$(tput setaf 3)
	blue=$(tput setaf 4)
	magenta=$(tput setaf 5)
	cyan=$(tput setaf 6)
	white=$(tput setaf 7)

	bold=$(tput bold)
	reset=$(tput sgr0)
else
	black="\033[01;30m"
	red="\033[01;31m"
	green="\033[01;32m"
	yellow="\033[01;33m"
	blue="\033[01;34m"
	magenta="\033[01;35m"
	cyan="\033[01;36m"
	white="\033[01;37m"

	bold=""
	reset="\033[00m"
fi

if command -v zsh >/dev/null 2>&1; then
    export SHELL=`which zsh`
fi

shellname=`basename $SHELL`

# ==============================================================================
# This litle helper when /sbin, /usr/sbin & /usr/local/sbin dir
# doesn't included in $PATH, I found this issue on WSL
# ==============================================================================

for sbin_dir in {/sbin,/usr/sbin,/usr/local/sbin}; do
	[[ -d $sbin_dir && -z "${PATH##*$sbin_dir*}" ]] || PATH=$PATH:$sbin_dir
done
unset sbin_dir

# ==============================================================================
# ASDF
# https://github.com/asdf-vm/asdf
# ==============================================================================

if [ -d ~/.asdf ]; then
    if [ -f ~/.asdf/asdf.sh ]; then
        . ~/.asdf/asdf.sh
    fi

    if [ -f ~/.asdf/completions/asdf.bash ]; then
        . ~/.asdf/completions/asdf.bash
    fi
else
# ==============================================================================
# RBENV environments
# ==============================================================================

	if [[ -d ~/.rbenv ]]; then
	    [[ -z $RBENV_ROOT ]] && export RBENV_ROOT=~/.rbenv

		PATH=$RBENV_ROOT/shims:$RBENV_ROOT/bin:$PATH

		if [ -f "$RBENV_ROOT/completions/rbenv.$shellname" ]; then
			. "$RBENV_ROOT/completions/rbenv.$shellname"
		fi
	fi

# ==============================================================================
# PHPENV environments
# ==============================================================================

	if [[ -d ~/.phpenv ]]; then
	    [[ -z $PHPENV_ROOT ]] && export PHPENV_ROOT=~/.phpenv

	# PHP_BUILD_CONFIGURE_OPTS="--with-libdir=lib/x86_64-linux-gnu"
		PATH=$PHPENV_ROOT/shims:$PHPENV_ROOT/bin:$PATH
	fi

# ==============================================================================
# NVM environments
# ==============================================================================

	[[ -z $NVM_DIR ]] && export NVM_DIR=~/.nvm

	if [ -d "$NVM_DIR" ]; then
		export NVM_SYMLINK_CURRENT=true

		. $NVM_DIR/nvm.sh
		[[ -f $NVM_DIR/${shellname}_completion ]] && . $NVM_DIR/${shellname}_completion

	    # If using WSL & Node.js Windows is installed
	    [[ -d $NVM_DIR/current/bin && -z "${PATH##*$NVM_DIR/versions/$(node -v)/bin*}" ]] && PATH=$NVM_DIR/current/bin:$PATH
	fi
fi

# ==============================================================================
# Gem user bin
# ==============================================================================

if command -v ruby >/dev/null 2>&1 && command -v gem >/dev/null 2>&1; then
    PATH=$(ruby -r rubygems -e 'puts Gem.user_dir')/bin:$PATH
fi


# ==============================================================================
# Composer
# ==============================================================================

if command -v composer >/dev/null 2>&1 && [[ $OSTYPE != 'cygwin' ]]; then
	[[ -z $COMPOSER_HOME ]] && export COMPOSER_HOME=~/.composer

	[[ -d $COMPOSER_HOME && -z "${PATH##*$COMPOSER_HOME/vendor/bin*}" ]] || PATH=$COMPOSER_HOME/vendor/bin:$PATH

	[[ -f $PWD/composer.json ]] && PATH=$PWD/vendor/bin:$PATH
fi

# ==============================================================================
# Node Package Manager
# Enable bash completion for NPM
# see: https://docs.npmjs.com/cli/completion
# ==============================================================================

if command -v npm >/dev/null 2>&1 && [[ $OSTYPE != 'cygwin' ]]; then
	[[ $shellname = bash ]] && . <(npm completion)

	if [[ -d $PWD/node_modules/.bin ]]; then
		PATH=$PATH:$PWD/node_modules/.bin

		# Enable bash completion for Grunt
		# see: https://github.com/gruntjs/grunt-cli#shell-tab-auto-completion
		if [[ -f $PWD/Gruntfile.js ]] && command -v grunt >/dev/null 2>&1; then
			eval `grunt --completion=$shellname`
		fi

		# Enable bash completion for Gulp
		# see: https://github.com/gulpjs/gulp-cli/tree/master/completion#completion-for-gulp
		if [[ -f $PWD/gulpfile.js ]] && command -v gulp >/dev/null 2>&1; then
			eval `gulp --completion=$shellname`
		fi
	fi
fi

# ==============================================================================
# added by travis gem
# ==============================================================================

[ -f ~/.travis/travis.sh ] && . ~/.travis/travis.sh

# ==============================================================================
# Git Prompt
# see: https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh
# ==============================================================================

[ -f ~/.local/tools/git-prompt.sh ] && . ~/.local/tools/git-prompt.sh

# ==============================================================================
# Go
# ==============================================================================

if command -v go >/dev/null 2>&1; then
    if [ -d ~/.local/share/go ]; then
        export GOROOT=~/.local/share/go
        PATH=$GOROOT/bin:$PATH
    fi

    if [ -d ~/.local/share/go-packages ]; then
        export GOPATH=~/.local/share/go-packages
        PATH=$GOPATH/bin:$PATH
    fi
fi

# ==============================================================================
# Java environments
# ==============================================================================

if [[ $OSTYPE == 'linux-gnu' ]]; then
	export JAVA_HOME=/usr/lib/jvm/java-8-oracle
fi

# ==============================================================================
# ORACLE DB Environtments
# ==============================================================================

# export ORACLE_HOME="/u01/app/oracle/product/11.2.0/xe"

# if [ -d "$ORACLE_HOME" ]; then
# 	export ORACLE_SID="XE"
# 	export NLS_LANG=`$ORACLE_HOME/bin/nls_lang.sh`
# 	export ORACLE_BASE="/u01/app/oracle"
# 	export LD_LIBRARY_PATH="$ORACLE_HOME/lib:$LD_LIBRARY_PATH"
# 	PATH="$ORACLE_HOME/bin:$PATH"
# fi

# ==============================================================================
# Oh-My-ZSH permission fix
# ==============================================================================

export ZSH_DISABLE_COMPFIX=true

# ==============================================================================

unset shellname
