[user]
	name =
	email =

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[init]
	defaultBranch = master
[core]
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes
	editor = nvim
	trustctime = false
	autocrlf = input

[credential]
	helper = manager
[gpg]
	program = gpg
	# format = x509
# [gpg "x509"]
# 	program = smimesign

[diff]
	tool = vimdiff

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true
	tool = vimdiff
	conflictstyle = diff3

[mergetool]
	prompt = false

[fetch]
	prune = true

[push]
	# Push to remote with same branch name as local
	default = matching

# [pull]
# 	rebase = true

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[alias]
	# View the current working tree status using the short format
	s = status -s
	a = add -A
	c = commit -sm
	p = push origin
	pf = push origin -f
	# Switch to a branch, creating it if necessary
	co = checkout
	go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
	get = "!git pull origin `git rev-parse --abbrev-ref HEAD`"
	zip = "!f() { fmt=`date +'%Y-%m-%d'`; git archive --format=zip -9 -o "${fmt}.zip" HEAD; }; f"
	release = "!f() { if [ -z \"$2\" ]; then msg=\"$1 released\"; else msg=$2; fi; git tag -s \"$1\" -m \"$msg\"; }; f"
	df = diff --color --color-words --abbrev
	# View abbreviated SHA, description, and history graph
	lg = log --graph --abbrev-commit --pretty=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%n%C(reset)%s %C(yellow)by %cn'
	# Update all submodules
	upmod = submodule -q foreach git pull -q origin
	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v
	# Interactive rebase with the given number of latest commits
	reb = "!r() { git rebase -i HEAD~$1; }; r"
	amend = commit --amend --reuse-message=HEAD
	undo = reset HEAD~
	# Subtrees
	split = subtree split
	subpl = subtree pull
	subps = subtree push

[color]
	ui = true
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow
	frag = magenta
	old = red
	new = green
[color "status"]
	added = yellow
	changed = green
	untracked = cyan

# URL shorthands
[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
	insteadOf = "github:"
[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
	insteadOf = "gist:"

[url "git@gitlab.com:"]
	insteadOf = "gl:"
	pushInsteadOf = "gitlab:"
	pushInsteadOf = "git://gitlab.com/"
[url "git://gitlab.com/"]
	insteadOf = "gitlab:"
